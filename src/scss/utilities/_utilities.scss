// Text alignment
.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.ml-auto {
  margin-left: auto;
}

.text-primary {
  color: var(--primary);
}

.fw-bolder {
  font-weight: 900;
}

.w-100 {
  width: 100%;
}

.h-100 {
  height: 100%;
  border: 1px solid green;
}

.absolute {
  position: absolute;
}

.left-0 {
  left: 0;
}

.right-0 {
  right: 0;
}

// Display utilities
@each $breakpoint in map-keys($grid-breakpoints) {
  @include respond-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .d#{$infix}-none {
      display: none !important;
    }
    .d#{$infix}-inline {
      display: inline !important;
    }
    .d#{$infix}-inline-block {
      display: inline-block !important;
    }
    .d#{$infix}-block {
      display: block !important;
    }
    .d#{$infix}-table {
      display: table !important;
    }
    .d#{$infix}-table-cell {
      display: table-cell !important;
    }
    .d#{$infix}-flex {
      display: flex !important;
    }
    .d#{$infix}-inline-flex {
      display: inline-flex !important;
    }
    .d#{$infix}-grid {
      display: grid !important;
    }
  }
}

// Flex variation
@each $breakpoint in map-keys($grid-breakpoints) {
  @include respond-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .flex#{$infix}-first {
      order: -1;
    }
    .flex#{$infix}-last {
      order: 1;
    }
    .flex#{$infix}-unordered {
      order: 0;
    }

    .flex#{$infix}-row {
      flex-direction: row !important;
    }
    .flex#{$infix}-row-reverse {
      flex-direction: row-reverse !important;
    }
    .flex#{$infix}-col {
      flex-direction: column !important;
    }
    .flex#{$infix}-col-reverse {
      flex-direction: column-reverse !important;
    }

    .flex#{$infix}-wrap {
      flex-wrap: wrap !important;
    }
    .flex#{$infix}-nowrap {
      flex-wrap: nowrap !important;
    }
    .flex#{$infix}-wrap-reverse {
      flex-wrap: wrap-reverse !important;
    }

    .justify-content#{$infix}-start {
      justify-content: flex-start !important;
    }
    .justify-content#{$infix}-end {
      justify-content: flex-end !important;
    }
    .justify-content#{$infix}-center {
      justify-content: center !important;
    }
    .justify-content#{$infix}-between {
      justify-content: space-between !important;
    }
    .justify-content#{$infix}-around {
      justify-content: space-around !important;
    }

    .align-items#{$infix}-start {
      align-items: flex-start !important;
    }
    .align-items#{$infix}-end {
      align-items: flex-end !important;
    }
    .align-items#{$infix}-center {
      align-items: center !important;
    }
    .align-items#{$infix}-baseline {
      align-items: baseline !important;
    }
    .align-items#{$infix}-stretch {
      align-items: stretch !important;
    }

    .align-content#{$infix}-start {
      align-content: flex-start !important;
    }
    .align-content#{$infix}-end {
      align-content: flex-end !important;
    }
    .align-content#{$infix}-center {
      align-content: center !important;
    }
    .align-content#{$infix}-between {
      align-content: space-between !important;
    }
    .align-content#{$infix}-around {
      align-content: space-around !important;
    }
    .align-content#{$infix}-stretch {
      align-content: stretch !important;
    }

    .align-self#{$infix}-auto {
      align-self: auto !important;
    }
    .align-self#{$infix}-start {
      align-self: flex-start !important;
    }
    .align-self#{$infix}-end {
      align-self: flex-end !important;
    }
    .align-self#{$infix}-center {
      align-self: center !important;
    }
    .align-self#{$infix}-baseline {
      align-self: baseline !important;
    }
    .align-self#{$infix}-stretch {
      align-self: stretch !important;
    }
  }
}

.flex-shrink-0 {
  flex-shrink: 0;
}

// floating
@each $breakpoint in map-keys($grid-breakpoints) {
  @include respond-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .float#{$infix}-left {
      float: left;
    }
    .float#{$infix}-right {
      float: right;
    }
    .float#{$infix}-none {
      float: none;
    }
  }
}

// Responsive visibility utilities
@each $bp in map-keys($grid-breakpoints) {
  .hidden-#{$bp}-up {
    @include respond-up($bp) {
      display: none !important;
    }
  }
  .hidden-#{$bp}-down {
    @include respond-down($bp) {
      display: none !important;
    }
  }
}

// Margin and Padding
@each $breakpoint in map-keys($grid-breakpoints) {
  @include respond-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @each $prop, $abbrev in (margin: m, padding: p) {
      @each $size, $lengths in $spacers {
        $length-x: map-get($lengths, x);
        $length-y: map-get($lengths, y);

        .#{$abbrev}#{$infix}-#{$size} {
          #{$prop}: $length-y $length-x !important;
        }
        .#{$abbrev}t#{$infix}-#{$size} {
          #{$prop}-top: $length-y !important;
        }
        .#{$abbrev}r#{$infix}-#{$size} {
          #{$prop}-right: $length-x !important;
        }
        .#{$abbrev}b#{$infix}-#{$size} {
          #{$prop}-bottom: $length-y !important;
        }
        .#{$abbrev}l#{$infix}-#{$size} {
          #{$prop}-left: $length-x !important;
        }
        .#{$abbrev}x#{$infix}-#{$size} {
          #{$prop}-right: $length-x !important;
          #{$prop}-left: $length-x !important;
        }
        .#{$abbrev}y#{$infix}-#{$size} {
          #{$prop}-top: $length-y !important;
          #{$prop}-bottom: $length-y !important;
        }
      }
    }

    // Some special margin utils
    .m#{$infix}-auto {
      margin: auto !important;
    }
    .mt#{$infix}-auto {
      margin-top: auto !important;
    }
    .mr#{$infix}-auto {
      margin-right: auto !important;
    }
    .mb#{$infix}-auto {
      margin-bottom: auto !important;
    }
    .ml#{$infix}-auto {
      margin-left: auto !important;
    }
    .mx#{$infix}-auto {
      margin-right: auto !important;
      margin-left: auto !important;
    }
    .my#{$infix}-auto {
      margin-top: auto !important;
      margin-bottom: auto !important;
    }
  }
}

// Alignment
.text-justify {
  text-align: justify !important;
}
.text-nowrap {
  white-space: nowrap !important;
}
.text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Responsive text alignment
@each $breakpoint in map-keys($grid-breakpoints) {
  @include respond-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .text#{$infix}-left {
      text-align: left !important;
    }
    .text#{$infix}-right {
      text-align: right !important;
    }
    .text#{$infix}-center {
      text-align: center !important;
    }
  }
}

// Text transformation
.text-lowercase {
  text-transform: lowercase !important;
}
.text-uppercase {
  text-transform: uppercase !important;
}
.text-capitalize {
  text-transform: capitalize !important;
}

// Font Weight and italics
.font-weight-normal {
  font-weight: $font-weight-normal;
}
.font-weight-bold {
  font-weight: $font-weight-bold;
}
.font-italic {
  font-style: italic;
}
